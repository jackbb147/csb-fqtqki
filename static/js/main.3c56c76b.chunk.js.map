{"version":3,"sources":["Counter.js","App.js","index.js"],"names":["Counter","onRemoveCounter","useState","name","setName","points","setPoints","ButtonRemoveCounter","ButtonIncrement","onIncrementClick","ButtonDecrement","onDecrementClick","ButtonStartValue","ButtonCounterName","onCounterNameClick","onClick","blankCounter","ID","id","generateID","Math","floor","random","ButtonAddCounter","onAddCounter","App","counters","setCounters","listItems","map","counter","console","log","newCounters","filter","removeCounter","createRoot","document","getElementById","render"],"mappings":"8MAKe,SAASA,EAAQ,GAAsB,IAApBC,EAAe,EAAfA,gBAChC,EAAwBC,mBAAS,WAAU,mBAApCC,EAAI,KAAEC,EAAO,KACpB,EAA4BF,mBAAS,GAAE,mBAAhCG,EAAM,KAAEC,EAAS,KAcxB,OACE,gCACE,cAACC,EAAmB,CAACN,gBAAiBA,IACtC,6BAAI,sBACJ,+BAAI,gBAAcE,EAAK,OACvB,+BAAI,YAAUE,EAAO,cACrB,cAACG,EAAe,CAACC,iBAlBrB,WACEH,EAAUD,EAAS,EACrB,IAiBI,cAACK,EAAe,CAACC,iBAfrB,WACEL,EAAUD,EAAS,EACrB,IAeI,cAACO,EAAgB,IACjB,cAACC,EAAiB,CAACC,mBAdvB,WACEV,EAAQ,WACV,MAeF,CAEA,SAASI,EAAgB,GAAuB,IAArBC,EAAgB,EAAhBA,iBACzB,OAAO,wBAAQM,QAASN,EAAiB,SAAC,QAC5C,CAEA,SAASC,EAAgB,GAAuB,IAArBC,EAAgB,EAAhBA,iBACzB,OAAO,wBAAQI,QAASJ,EAAiB,SAAC,SAC5C,CAEA,SAASC,IACP,OAAO,iCAAQ,iBACjB,CAEA,SAASC,EAAkB,GAAyB,IAAvBC,EAAkB,EAAlBA,mBAC3B,OAAO,wBAAQC,QAASD,EAAmB,SAAC,gBAC9C,CAEA,SAASP,EAAoB,GAAsB,IAApBN,EAAe,EAAfA,gBAC7B,OAAO,wBAAQc,QAASd,EAAgB,SAAC,mBAC3C,CCnDA,SAASe,EAAaC,GACpB,MAAO,CACLd,KAAM,UACNE,OAAQ,EACRa,GAAID,GAAME,EAAW,WAEzB,CAIA,SAASA,EAAWhB,GAGlB,OAAOA,EAAOiB,KAAKC,MAAmB,IAAbD,KAAKE,SAFpB,EAGZ,CAEA,SAASC,EAAiB,GAAmB,IAAjBC,EAAY,EAAZA,aAC1B,OAAO,wBAAQT,QAASS,EAAa,SAAC,iBACxC,CAEe,SAASC,IAEtB,MAAgCvB,mBAAS,CAACc,MAAgB,mBAAnDU,EAAQ,KAAEC,EAAW,KAEtBC,EAAYF,EAASG,KAAI,SAACC,GAC9B,OACE,cAAC9B,EAAO,CAENC,gBAAiB,YAOvB,SAAuBiB,GACrBa,QAAQC,IAAI,aAAcd,EAAIQ,GAE9B,IAAIO,EAAcP,EAASQ,QAAO,SAACJ,GAAO,OAAKA,EAAQZ,KAAOA,CAAE,IAEhES,EAAYM,EACd,CAZQE,CAAcL,EAAQZ,GACxB,GAHKY,EAAQZ,GAMnB,IAaA,OACE,gCACE,cAACK,EAAgB,CAACC,aANtB,WACEG,EAAY,GAAD,mBAAKD,GAAQ,CAAEV,MAC5B,IAKI,6BAAKY,MAGX,CCjDaQ,qBAAWC,SAASC,eAAe,SAC3CC,OACH,cAAC,aAAU,UACT,cAACd,EAAG,M","file":"static/js/main.3c56c76b.chunk.js","sourcesContent":["import { useState } from \"react\";\n/**\n * Each counter is associated to a student.\n */\n\nexport default function Counter({ onRemoveCounter }) {\n  const [name, setName] = useState(\"Student\");\n  const [points, setPoints] = useState(0);\n\n  function handleIncrementClick() {\n    setPoints(points + 1);\n  }\n\n  function handleDecrementClick() {\n    setPoints(points - 1);\n  }\n\n  function handleChangeName() {\n    setName(\"superman\");\n  }\n\n  return (\n    <div>\n      <ButtonRemoveCounter onRemoveCounter={onRemoveCounter} />\n      <h1>Welcome to my app</h1>\n      <h2> My name is: {name} </h2>\n      <h2> I have: {points} points </h2>\n      <ButtonIncrement onIncrementClick={handleIncrementClick} />\n      <ButtonDecrement onDecrementClick={handleDecrementClick} />\n\n      <ButtonStartValue />\n      <ButtonCounterName onCounterNameClick={handleChangeName} />\n    </div>\n  );\n}\n\nfunction ButtonIncrement({ onIncrementClick }) {\n  return <button onClick={onIncrementClick}>Plus</button>;\n}\n\nfunction ButtonDecrement({ onDecrementClick }) {\n  return <button onClick={onDecrementClick}>Minus</button>;\n}\n\nfunction ButtonStartValue() {\n  return <button> Start Value </button>;\n}\n\nfunction ButtonCounterName({ onCounterNameClick }) {\n  return <button onClick={onCounterNameClick}>Counter Name</button>;\n}\n\nfunction ButtonRemoveCounter({ onRemoveCounter }) {\n  return <button onClick={onRemoveCounter}> Remove Counter</button>;\n}\n","import { useState } from \"react\";\nimport Counter from \"./Counter\";\n\nfunction blankCounter(ID) {\n  return {\n    name: \"Student\",\n    points: 0,\n    id: ID || generateID(\"student\")\n  };\n}\n/**\n * generate an ID\n */\nfunction generateID(name) {\n  var min = 1,\n    max = 1000;\n  return name + Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nfunction ButtonAddCounter({ onAddCounter }) {\n  return <button onClick={onAddCounter}> Add Counter </button>;\n}\n\nexport default function App() {\n  //counters is an object: { name: String, points: Number }\n  const [counters, setCounters] = useState([blankCounter()]);\n\n  const listItems = counters.map((counter) => {\n    return (\n      <Counter\n        key={counter.id}\n        onRemoveCounter={() => {\n          removeCounter(counter.id);\n        }}\n      />\n    ); //TODO: handle duplicate name.\n  });\n\n  function removeCounter(id) {\n    console.log(\"remove me:\", id, counters);\n\n    var newCounters = counters.filter((counter) => counter.id !== id);\n\n    setCounters(newCounters);\n  }\n  function addCounter() {\n    setCounters([...counters, blankCounter()]);\n  }\n\n  return (\n    <div>\n      <ButtonAddCounter onAddCounter={addCounter} />\n      <ul>{listItems}</ul>\n    </div>\n  );\n}\n","import React, { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport \"./styles.css\";\n\nimport App from \"./App\";\n\nconst root = createRoot(document.getElementById(\"root\"));\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);"],"sourceRoot":""}